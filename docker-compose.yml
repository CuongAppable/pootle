# docker-compose for Pootle development.
#
# Note: Requires docker-compose 1.10+.
version: "2.1"
services:

  # Installs packages shared by all images
  root:
    build:
      context: ./docker/root
    image: translate/pootle:root

  # Build image with dev libs etc
  build:
    build:
      context: ./docker/build
    image: translate/pootle:build

  # Minimal base image with no dev libs etc
  base:
    image: translate/pootle:base
    build:
      context: ./docker/base

  base-postgres:
    extends: base
    image: translate/pootle:base-postgres
    build:
      args:
        - BUILD_IMAGE=demo
        - POOTLE_ENV=postgres
        - BUILD_INSTALL_PKGS=libpq-dev
        - BUILD_INSTALL_EGGS=psycopg2-binary
        - BUILD_INSTALL_SETTINGS=./settings.postgres.conf
        - BASE_INSTALL_PRE=mkdir -p /usr/share/man/man1 /usr/share/man/man7
        - BASE_INSTALL_PKGS=postgresql-client

  # Postgres based demo image
  demo:
    image: translate/pootle:demo
    extends: base-postgres
    environment:
      - LOCAL_USER_ID=${LOCAL_USER_ID:-}
    build:
      args:
        - BUILD_IMAGE=demo
    depends_on:
      - db-demo
      - redis
      - elasticsearch
    links:
      - "db-demo:postgres"
    ports:
      - "8000:8000"

  # Data volume with demo database
  db-demo:
    build:
      context: ./docker/db-demo
    image: translate/pootle:db-demo
    restart: always

  ## Dev services

  dev-build:
    build:
      context: ./docker/dev-build
    image: translate/pootle:dev-build

  base-dev:
    image: translate/pootle:base-dev
    extends: base
    build:
      args:
        - BUILD_FROM=translate/pootle:dev-build
        - BUILD_IMAGE=dev
    environment:
      - LOCAL_USER_ID=${LOCAL_USER_ID:-''}
    ports:
      - "8000:8000"
    volumes:
      - .:/home/pootle/pootle_env/src/pootle

  # Dev app (postgres)
  dev-postgres:
    image: translate/pootle:dev-postgres
    extends: base-dev
    build:
      args:
        - POOTLE_ENV=postgres
        - BUILD_INSTALL_PKGS=libpq-dev
        - BUILD_INSTALL_EGGS=psycopg2-binary
        - BUILD_INSTALL_SETTINGS=./settings.postgres.conf
        - BASE_INSTALL_PRE=mkdir -p /usr/share/man/man1 /usr/share/man/man7
        - BASE_INSTALL_PKGS=postgresql-client
    depends_on:
      - postgres
      - redis
      - elasticsearch

  # Dev app (mariadb)
  dev-mariadb:
    image: translate/pootle:dev-mariadb
    extends: base-dev
    build:
      args:
        - POOTLE_ENV=mariadb
        - BUILD_INSTALL_PKGS=libmariadbclient-dev-compat
        - BUILD_INSTALL_EGGS=MySQL-python
        - BUILD_INSTALL_SETTINGS=./settings.mariadb.conf
        - BASE_INSTALL_PKGS=libmariadbclient18 mariadb-client
    depends_on:
      - mariadb
      - redis
      - elasticsearch

  # Dev app (sqlite)
  dev-sqlite:
    image: translate/pootle:dev-sqlite
    extends: base-dev
    build:
      args:
        - POOTLE_ENV=sqlite
        - BUILD_FROM=translate/pootle:dev-build
        - BASE_INSTALL_PKGS=sqlite3
    depends_on:
      - redis
      - elasticsearch

  ## Other services

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.3
    restart: always
    ports:
      - 9200:9200
    environment:
      - cluster.name=docker-cluster
      - transport.host=127.0.0.1
      - transport.tcp.port=9300
      - http.port=9200
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  mariadb:
    image: mariadb
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=CHANGEME
      - MYSQL_DATABASE=pootledb
      - MYSQL_USER=pootle
      - MYSQL_PASSWORD=CHANGEME

  postgres:
    image: postgres:9.4-alpine
    restart: always
    environment:
      - POSTGRES_USER=pootle
      - POSTGRES_PASSWORD=CHANGEME
      - POSTGRES_DB=pootledb

  redis:
    image: redis:alpine
    restart: always
